dds$fibroblast_line <- as.factor(dds$fibroblast_line)
dds$treatment <- as.factor(dds$treatment)
dds$treatment <- relevel(dds$treatment, ref = "DMSO")
design(dds) <- formula(~ treatment + fibroblast_line)
?rowMeans
pc_genes <- intersect(protein_coding_genes$ensembl_gene_id, row.names(dds))
dds <- dds[pc_genes,]
# 17861 genes left
keep <- rowMeans(counts(dds)) >= 30
dds <- dds[keep, ]
nrow(dds)
dds <- DESeq(dds)
dds <- DESeq(dds)
dds_file <- "data/dds.RDS"
saveRDS(dds, dds_file)
resultsNames(dds)
rld_file <- "data/rld.RDS"
rld <- rlog(dds, blind = TRUE)
saveRDS(rld, rld_file)
getwd()
setwd("week1")
setwd("../2023_rnaseq_course/week1/")
library(GenomicRanges)
library(rtracklayer)
library(Rsamtools)
GTFfile = "../data/Homo_sapiens.GRCh38.110.gtf"
FASTAfile = "../data/Homo_sapiens.GRCh38.dna.toplevel.fa"
GTF <- import.gff(GTFfile, format="gtf", genome="GRCh38", asRangedData=F, feature.type="exon")
?import.gff
GTF <- import.gff(GTFfile, format="gtf", genome="GRCh38", feature.type="exon")
grl <- reduce(split(GTF, elementMetadata(GTF)$gene_id))
reducedGTF <- unlist(grl, use.names=T)
elementMetadata(reducedGTF)$gene_id <- rep(names(grl), elementLengths(grl))
?elementLengths
??elementLengths
elementMetadata(reducedGTF)$gene_id <- rep(names(grl), elementNROWS(grl))
FASTA <- FaFile(FASTAfile)
open(FASTA)
elementMetadata(reducedGTF)$nGCs <- letterFrequency(getSeq(FASTA, reducedGTF), "GC")[,1]
elementMetadata(reducedGTF)$widths <- width(reducedGTF)
calc_GC_length <- function(x) {
nGCs = sum(elementMetadata(x)$nGCs)
width = sum(elementMetadata(x)$widths)
c(width, nGCs/width)
}
output <- t(sapply(split(reducedGTF, elementMetadata(reducedGTF)$gene_id), calc_GC_length))
colnames(output) <- c("Length", "GC")
write.table(output, file="GC_lengths.tsv", sep="\t")
gene_length <- read_tsv("tables/GC_lengths.tsv")
View(gene_length)
View(gene_length)
gene_length <- read_tsv("tables/GC_lengths.tsv")
View(gene_length)
View(counts)
v_len <- gene_length %>% semi_join(counts, by = c("ensembl_gene_id" = rownames))
v_len <- gene_length %>% semi_join(counts, by = c("ensembl_gene_id" = rownames()))
files <- fs::dir_ls(path = "../data/", glob = "*exonCounts.txt")
counts <- readr::read_tsv(files, id = "path", col_names = c("ensembl_gene_id", "raw_counts"))
df_split <- str_split_fixed(counts$path, "_", 13) %>% as.data.frame()
counts$sample <- df_split$V1
counts <- counts %>%
mutate(sample = str_replace(sample, "../data/", "")) %>%
dplyr::relocate(sample) %>% dplyr::select(-path) %>%
pivot_wider(names_from = "sample", values_from = "raw_counts") %>%
write_csv(counts_csv)
files <- fs::dir_ls(path = "../data/", glob = "*exonCounts.txt")
counts <- readr::read_tsv(files, id = "path", col_names = c("ensembl_gene_id", "raw_counts"))
files
files <- fs::dir_ls(path = "../data/input_geo", glob = "*exonCounts.txt")
files
counts <- readr::read_tsv(files, id = "path", col_names = c("ensembl_gene_id", "raw_counts"))
df_split <- str_split_fixed(counts$path, "_", 13) %>% as.data.frame()
counts$sample <- df_split$V1
counts <- counts %>%
mutate(sample = str_replace(sample, "../data/input_geo/", "")) %>%
dplyr::relocate(sample) %>% dplyr::select(-path) %>%
pivot_wider(names_from = "sample", values_from = "raw_counts") %>%
write_csv(counts_csv)
counts <- readr::read_tsv(files, id = "path", col_names = c("ensembl_gene_id", "raw_counts"))
files <- fs::dir_ls(path = "../data/input_geo", glob = "*exonCounts.txt")
files
counts <- readr::read_tsv(files, id = "path", col_names = c("ensembl_gene_id", "raw_counts"))
View(counts)
df_split <- str_split_fixed(counts$path, "_", 13) %>% as.data.frame()
counts$sample <- df_split$V1
counts <- counts %>%
mutate(sample = str_replace(sample, "../data/input_geo/", "")) %>%
dplyr::relocate(sample) %>% dplyr::select(-path) %>%
pivot_wider(names_from = "sample", values_from = "raw_counts") %>%
write_csv(counts_csv)
View(counts)
counts <- readr::read_tsv(files, id = "path", col_names = c("ensembl_gene_id", "raw_counts"))
df_split <- str_split_fixed(counts$path, "_", 13) %>% as.data.frame()
View(df_split)
counts$sample <- df_split$V2
counts <- counts %>%
mutate(sample = str_replace(sample, "geo/", "")) %>%
dplyr::relocate(sample) %>% dplyr::select(-path) %>%
pivot_wider(names_from = "sample", values_from = "raw_counts") %>%
write_csv(counts_csv)
gene_length <- read_tsv("tables/GC_lengths.tsv")
v_len <- gene_length %>% semi_join(counts, by = c("ensembl_gene_id" = rownames()))
v_len <- gene_length %>% semi_join(counts, by = c("ensembl_gene_id" = "ensembl_gene_id"))
View(v_len)
gene_length <- read_tsv("tables/GC_lengths.tsv") %>% arrange(ensembl_gene_id)
counts <- counts %>% arrange(ensembl_gene_id)
View(counts)
v_len <- gene_length %>% semi_join(counts, by = c("ensembl_gene_id" = "ensembl_gene_id"))
View(v_len)
v <- intersect(counts$ensembl_gene_id, gene_length$ensembl_gene_id)
head (v)
v_len <- gene_length %>% dplyr::filter(ensembl_gene_id %in% gene_ids)
gene_ids <- intersect(counts$ensembl_gene_id, gene_length$ensembl_gene_id)
v_len <- gene_length %>% dplyr::filter(ensembl_gene_id %in% gene_ids)
counts <- counts %>% dplyr::filter(ensembl_gene_id %in% gene_ids)
counts <- counts %>% column_to_rownames("ensembl_gene_id")
counts_tpm <- counts / v_len$Length
View(counts_tpm)
x <- counts / v_len$Length
tpm.mat <- t( t(x) * 1e6 / colSums(x) )
View(tpm.mat)
tpm.mat <- t( t(x) * 1e6 / colSums(x) ) %>% round(2)
contrast <- c("treatment", "adapalene", "DMSO")
resTreatment <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resTreatment$padj < 0.05))
resTreatment_tb <- resTreatment %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resTreatment_tb_significant <- dplyr::filter(resTreatment_tb, padj < 0.05) %>%
dplyr::filter(abs(log2FoldChange) > 1) %>% comb_de_result_table()
samples_control <- metadata %>% dplyr::filter(treatment == "DMSO") %>% row.names()
samples_control
tpm_control <- get_counts_for_samples(samples_control, "DMSO_mean_tpm" )
get_counts_for_samples <- function(counts_tpm, samples, column_name){
tpm_counts <- counts_tpm %>%
as.data.frame() %>%
dplyr::select(any_of(samples)) %>%
rowMeans() %>%
as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id")
colnames(tpm_counts) <- c("ensembl_gene_id", "tpm")
tpm_counts <- tpm_counts %>%
dplyr::mutate("{column_name}" := round(tpm, 2)) %>%
dplyr::select(-tpm)
return(tpm_counts)
}
tpm_control <- get_counts_for_samples(samples_control, "DMSO_mean_tpm" )
tpm_control <- get_counts_for_samples(counts_tpm, samples_control, "DMSO_mean_tpm" )
View(tpm_control)
samples_effect <- meta %>% dplyr::filter(treatment == "adapalene") %>% row.names()
samples_effect <- metadata %>% dplyr::filter(treatment == "adapalene") %>% row.names()
tpm_effect <- get_counts_for_samples(counts_tpm, samples_effect, "adapalene_tpm")
tpm_counts <- tpm_effect %>%
left_join(tpm_control,
by = c("ensembl_gene_id" = "ensembl_gene_id"))
resTreatment_tb_significant <- resTreatment_tb_significant %>%
left_join(tpm_counts, by = c("gene" = "ensembl_gene_id"))
View(resTreatment_tb_significant)
sigTreatment_up <- rownames(resTreatment)[which(resTreatment$padj < 0.01 & resTreatment$log2FoldChange > 0)]
sigTreatment_down <- rownames(resTreatment)[which(resTreatment$padj < 0.01 & resTreatment$log2FoldChange < 0)]
d <- plotCounts(dds,
gene = "ENSG00000130234",
intgroup = "treatment",
returnData = TRUE)
write_xlsx(list(T2.DE_adapalene = resTreatment_tb_significant),
"tables/T2.DE_adapalene.xlsx")
library(writexl)
write_xlsx(list(T2.DE_adapalene = resTreatment_tb_significant),
"tables/T2.DE_adapalene.xlsx")
resTreatment_tb_significant <- resTreatment_tb_significant %>%
left_join(tpm_counts, by = c("gene" = "ensembl_gene_id")) %>%
arrange(log2FoldChange)
write_xlsx(list(T2.DE_adapalene = resTreatment_tb_significant),
"tables/T2.DE_adapalene.xlsx")
d <- plotCounts(dds,
gene = "ENSG00000198846",
intgroup = "treatment",
returnData = TRUE)
ggplot(d, aes(x = treatment, y = count, color = treatment)) +
geom_point(position = position_jitter(w = 0.1, h = 0)) +
geom_text_repel(aes(label = rownames(d))) +
theme_bw(base_size = 10) +
ggtitle("ACE2") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_log10()
ggplot(d, aes(x = treatment, y = count, color = treatment)) +
geom_point(position = position_jitter(w = 0.1, h = 0)) +
geom_text_repel(aes(label = rownames(d))) +
theme_bw(base_size = 10) +
ggtitle("TOX") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_log10()
contrast <- c("treatment", "adapalene", "DMSO")
resTreatment <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resTreatment$padj < 0.05))
resTreatment_tb <- resTreatment %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resTreatment_tb_significant <- dplyr::filter(resTreatment_tb, padj < 0.05) %>%
dplyr::filter(abs(log2FoldChange) > 1) %>% comb_de_result_table()
samples_control <- metadata %>% dplyr::filter(treatment == "DMSO") %>% row.names()
tpm_control <- get_counts_for_samples(counts_tpm, samples_control, "DMSO_mean_tpm" )
samples_effect <- metadata %>% dplyr::filter(treatment == "adapalene") %>% row.names()
tpm_effect <- get_counts_for_samples(counts_tpm, samples_effect, "adapalene_tpm")
tpm_counts <- tpm_effect %>%
left_join(tpm_control,
by = c("ensembl_gene_id" = "ensembl_gene_id"))
resTreatment_tb_significant <- resTreatment_tb_significant %>%
left_join(tpm_counts, by = c("gene" = "ensembl_gene_id")) %>%
arrange(log2FoldChange)
View(resTreatment_tb_significant)
View(counts_tpm)
files <- fs::dir_ls(path = "../data/input_geo", glob = "*exonCounts.txt")
counts <- readr::read_tsv(files, id = "path", col_names = c("ensembl_gene_id", "raw_counts"))
df_split <- str_split_fixed(counts$path, "_", 13) %>% as.data.frame()
counts$sample <- df_split$V2
counts <- counts %>%
mutate(sample = str_replace(sample, "geo/", "")) %>%
dplyr::relocate(sample) %>% dplyr::select(-path) %>%
pivot_wider(names_from = "sample", values_from = "raw_counts")
gene_length <- read_tsv("tables/GC_lengths.tsv") %>% arrange(ensembl_gene_id)
counts <- counts %>% arrange(ensembl_gene_id)
gene_ids <- intersect(counts$ensembl_gene_id, gene_length$ensembl_gene_id)
v_len <- gene_length %>% dplyr::filter(ensembl_gene_id %in% gene_ids)
counts <- counts %>% dplyr::filter(ensembl_gene_id %in% gene_ids)
write_csv(counts, counts_csv)
counts <- counts %>% column_to_rownames("ensembl_gene_id")
x <- counts / v_len$Length
counts_tpm <- t( t(x) * 1e6 / colSums(x) ) %>% round(2) %>%
rownames_to_column("ensembl_gene_id") %>% write_csv(counts_tpm)
View(x)
counts_tpm <- t( t(x) * 1e6 / colSums(x) ) %>% round(2) %>%
rownames_to_column("ensembl_gene_id") %>% write_csv(counts_tpm)
head(x)
counts_tpm <- t( t(x) * 1e6 / colSums(x) )
counts_tpm <- t(t(x) * 1e6 / colSums(x)) %>% as.data.frame() %>% round(2) %>%
rownames_to_column("ensembl_gene_id") %>% write_csv(counts_tpm)
counts_tpm <- t(t(x) * 1e6 / colSums(x)) %>% as.data.frame()
View(counts_tpm)
test <- counts_tpm %>% round(2)
View(test)
counts_tpm <- t(t(x) * 1e6 / colSums(x)) %>% as.data.frame() %>% round(2) %>%
rownames_to_column("ensembl_gene_id") %>% write_csv(counts_tpm_csv)
counts_tpm_csv <- "tables/counts_tpm.csv"
counts_tpm <- t(t(x) * 1e6 / colSums(x)) %>% as.data.frame() %>% round(2) %>%
rownames_to_column("ensembl_gene_id") %>% write_csv(counts_tpm_csv)
View(counts_tpm)
contrast <- c("treatment", "adapalene", "DMSO")
resTreatment <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resTreatment$padj < 0.05))
# Add annotations
resTreatment_tb <- resTreatment %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resTreatment_tb_significant <- dplyr::filter(resTreatment_tb, padj < 0.05) %>%
dplyr::filter(abs(log2FoldChange) > 1) %>% comb_de_result_table()
samples_control <- metadata %>% dplyr::filter(treatment == "DMSO") %>% row.names()
tpm_control <- get_counts_for_samples(counts_tpm, samples_control, "DMSO_mean_tpm" )
samples_effect <- metadata %>% dplyr::filter(treatment == "adapalene") %>% row.names()
tpm_effect <- get_counts_for_samples(counts_tpm, samples_effect, "adapalene_tpm")
tpm_counts <- tpm_effect %>%
left_join(tpm_control,
by = c("ensembl_gene_id" = "ensembl_gene_id"))
resTreatment_tb_significant <- resTreatment_tb_significant %>%
left_join(tpm_counts, by = c("gene" = "ensembl_gene_id")) %>%
arrange(log2FoldChange)
write_xlsx(list(T2.DE_adapalene = resTreatment_tb_significant),
"tables/T2.DE_adapalene.xlsx")
View(resTreatment_tb_significant)
tpm_control <- get_counts_for_samples(counts_tpm, samples_control, "DMSO_mean_tpm" )
View(tpm_control)
samples_control <- metadata %>% dplyr::filter(treatment == "DMSO") %>% row.names()
samples <- samples_control
head(counts_tpm)
tpm_counts <- counts_tpm %>%
as.data.frame() %>%
dplyr::select(any_of(samples)) %>%
rowMeans() %>%
as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id")
View(tpm_counts)
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rownames_to_column("ensembl_gene_id") %>%
as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id")
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rownames_to_column("ensembl_gene_id")
View(tpm_counts)
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rowMeans() %>%
rownames_to_column("ensembl_gene_id")
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rowMeans()
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rowMeans() %>%
as.data.frame()
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rowMeans() %>%
as.data.frame() %>%
rownames_to_column("ensembl_gene_id")
colnames(tpm_counts) <- c("ensembl_gene_id", "tpm")
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rowMeans() %>%
as.data.frame() %>%
round(2) %>%
rownames_to_column("ensembl_gene_id")
colnames(tpm_counts) <- c("ensembl_gene_id", "tpm")
column_name <- "test"
tpm_counts <- tpm_counts %>%
dplyr::mutate("{column_name}" := round(tpm, 2)) %>%
dplyr::select(-tpm)
get_counts_for_samples <- function(counts_tpm, samples, column_name){
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rowMeans() %>%
as.data.frame() %>%
round(2) %>%
rownames_to_column("ensembl_gene_id")
colnames(tpm_counts) <- c("ensembl_gene_id", "tpm")
tpm_counts <- tpm_counts %>%
dplyr::mutate("{column_name}" := round(tpm, 2)) %>%
dplyr::select(-tpm)
return(tpm_counts)
}
contrast <- c("treatment", "adapalene", "DMSO")
resTreatment <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resTreatment$padj < 0.05))
# Add annotations
resTreatment_tb <- resTreatment %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resTreatment_tb_significant <- dplyr::filter(resTreatment_tb, padj < 0.05) %>%
dplyr::filter(abs(log2FoldChange) > 1) %>% comb_de_result_table()
samples_control <- metadata %>% dplyr::filter(treatment == "DMSO") %>% row.names()
tpm_control <- get_counts_for_samples(counts_tpm, samples_control, "DMSO_mean_tpm" )
samples_effect <- metadata %>% dplyr::filter(treatment == "adapalene") %>% row.names()
tpm_effect <- get_counts_for_samples(counts_tpm, samples_effect, "adapalene_tpm")
tpm_counts <- tpm_effect %>%
left_join(tpm_control,
by = c("ensembl_gene_id" = "ensembl_gene_id"))
resTreatment_tb_significant <- resTreatment_tb_significant %>%
left_join(tpm_counts, by = c("gene" = "ensembl_gene_id")) %>%
arrange(log2FoldChange)
write_xlsx(list(T2.DE_adapalene = resTreatment_tb_significant),
"tables/T2.DE_adapalene.xlsx")
d <- plotCounts(dds,
gene = "ENSG00000198846",
intgroup = "treatment",
returnData = TRUE)
ggplot(d, aes(x = treatment, y = count, color = treatment)) +
geom_point(position = position_jitter(w = 0.1, h = 0)) +
geom_text_repel(aes(label = rownames(d))) +
theme_bw(base_size = 10) +
ggtitle("TOX") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_log10()
sig_up <- resTreatment_tb_significant %>% arrange(-log2FoldChange) %>% head(50) %>% pull(gene)
sig_down <- resTreatment_tb_significant %>% arrange(log2FoldChange) %>% head(50) %>% pull(gene)
sig <- c(sig_up, sig_down)
row_annotation <- gene_symbol %>%
as_tibble() %>%
dplyr::filter(gene_id %in% sig)
plotmat <- counts_tpm[c(sig_up, sig_down),] %>% as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id") %>%
left_join(gene_symbol, by = c("ensembl_gene_id" = "gene_id")) %>%
drop_na(symbol)
plotmat <- counts_tpm %>% column_to_rownames("ensembl_gene_id") %>%
counts_tpm[c(sig_up, sig_down),] %>% as.data.frame()
plotmat <- counts_tpm %>% column_to_rownames("ensembl_gene_id")
View(plotmat)
plotmat <- plotmat[c(sig_up, sig_down),] %>% as.data.frame()
row_annotation <- gene_symbol %>%
as_tibble() %>%
dplyr::filter(gene_id %in% sig)
plotmat <- counts_tpm %>% column_to_rownames("ensembl_gene_id")
plotmat <- plotmat[c(sig_up, sig_down),] %>% as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id") %>%
left_join(gene_symbol, by = c("ensembl_gene_id" = "gene_id")) %>%
drop_na(symbol)
plotmat$ensembl_gene_id <- NULL
plotmat <- plotmat %>% column_to_rownames(var = "symbol") %>% as.matrix()
heat.colors <- brewer.pal(6, "YlOrRd")
pheatmap(plotmat, scale = "row",
show_rownames = TRUE,
border = FALSE,
annotation = meta[, c("treatment"), drop = FALSE],
main = "Top 50 Up- and Down- regulated genes in treatment: post vs pre",
fontsize = 20)
pheatmap(plotmat, scale = "row",
show_rownames = TRUE,
border = FALSE,
annotation = metadata[, c("treatment"), drop = FALSE],
main = "Top 50 Up- and Down- regulated genes in treatment: adapalene vs DMSO",
fontsize = 20)
plotmat <- counts_tpm %>% column_to_rownames("ensembl_gene_id")
plotmat <- counts_tpm %>% column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(c(samples_control, samples_effect)))
plotmat <- plotmat[c(sig_up, sig_down),] %>% as.data.frame() %>%
rownames_to_column(var = "ensembl_gene_id") %>%
left_join(gene_symbol, by = c("ensembl_gene_id" = "gene_id")) %>%
drop_na(symbol)
plotmat$ensembl_gene_id <- NULL
plotmat <- plotmat %>% column_to_rownames(var = "symbol") %>% as.matrix()
heat.colors <- brewer.pal(6, "YlOrRd")
# Plot heatmap
# color = heat.colors,
pheatmap(plotmat, scale = "row",
show_rownames = TRUE,
border = FALSE,
annotation = metadata[, c("treatment"), drop = FALSE],
main = "Top 50 Up- and Down- regulated genes in treatment: adapalene vs DMSO",
fontsize = 20)
annotation_file <- "tables/ensembl94_hg38_annotations.txt"
gene_symbol_file <- "tables/gene_symbol.txt"
if (file.exists(annotation_file)){
hsdb <- read_tsv(annotation_file)
gene_symbol <- read_tsv(gene_symbol_file)
}else{
# Connect to AnnotationHub
ah <- AnnotationHub()
# Query AnnotationHub
hs_ens <- query(ah, c("Homo sapiens", "EnsDb"))
# Get Ensembl94 - used in bcbio
hs_ens <- hs_ens[["AH64923"]]
# Extract gene-level information
txdb <- transcripts(hs_ens,
return.type = "data.frame") %>%
dplyr::select(tx_id, gene_id)
genedb <- genes(hs_ens,
return.type = "data.frame") %>%
dplyr::select(gene_id, gene_name, symbol)
gene_symbol <- genedb %>% dplyr::select(gene_id, symbol)
write_tsv(gene_symbol, gene_symbol_file)
hsdb <- inner_join(txdb, genedb)
write.table(hsdb,
file = annotation_file ,
sep = "\t",
row.names = F,
quote = F)
}
contrast <- c("treatment", "adapalene", "DMSO")
resTreatment <- results(dds, contrast = contrast, alpha = 0.05)
length(which(resTreatment$padj < 0.05))
resTreatment_tb <- resTreatment %>%
data.frame() %>%
rownames_to_column(var = "gene") %>%
as_tibble() %>%
left_join(gene_symbol, by = c("gene" = "gene_id"))
resTreatment_tb_significant <- dplyr::filter(resTreatment_tb, padj < 0.05) %>%
dplyr::filter(abs(log2FoldChange) > 1) %>% comb_de_result_table()
samples_control <- metadata %>% dplyr::filter(treatment == "DMSO") %>% row.names()
tpm_control <- get_counts_for_samples(counts_tpm, samples_control, "DMSO_mean_tpm" )
samples_effect <- metadata %>% dplyr::filter(treatment == "adapalene") %>% row.names()
tpm_effect <- get_counts_for_samples(counts_tpm, samples_effect, "adapalene_tpm")
tpm_counts <- tpm_effect %>%
left_join(tpm_control,
by = c("ensembl_gene_id" = "ensembl_gene_id"))
resTreatment_tb_significant <- resTreatment_tb_significant %>%
left_join(tpm_counts, by = c("gene" = "ensembl_gene_id")) %>%
arrange(log2FoldChange)
samples_control <- metadata %>% dplyr::filter(treatment == "DMSO") %>% row.names()
tpm_control <- get_counts_for_samples(counts_tpm, samples_control, "DMSO_mean_tpm")
View(tpm_control)
samples_effect <- metadata %>% dplyr::filter(treatment == "adapalene") %>% row.names()
tpm_effect <- get_counts_for_samples(counts_tpm, samples_effect, "adapalene_tpm")
tpm_counts <- tpm_effect %>%
left_join(tpm_control,
by = c("ensembl_gene_id" = "ensembl_gene_id"))
View(tpm_counts)
resTreatment_tb_significant <- resTreatment_tb_significant %>%
left_join(tpm_counts, by = c("gene" = "ensembl_gene_id")) %>%
arrange(log2FoldChange)
print(nrow(tpm_counts))
tpm_counts <- counts_tpm %>%
column_to_rownames("ensembl_gene_id") %>%
dplyr::select(any_of(samples)) %>%
rowMeans() %>%
as.data.frame() %>%
round(2) %>%
rownames_to_column("ensembl_gene_id")
View(tpm_counts)
colnames(tpm_counts) <- c("ensembl_gene_id", "tpm")
tpm_counts <- tpm_counts %>%
dplyr::mutate("{column_name}" := round(tpm, 2)) %>%
dplyr::select(-tpm)
View(tpm_counts)
View(metadata)
samples_control <- metadata %>% rownames_to_column("ensembl_gene_id") %>%
dplyr::filter(treatment == "DMSO") %>% pull("ensembl_gene_id")
